Summary(As I understood) :
We can use For of loop for values printing/for iterating over values directly over [[[[ Strings & Array  ]]]
We can use For in loop for values printing/for iterating over values by Indexes/Keys over Objects and Arrays & Strings .
We Can Use forEach loop For iterating {{Over Arrays}} and its values as well.


//FOR OF & FOR-IN LOOP:

====FOR-OF LOOP =====
//HUM FOR-OF LOOP ARRAYS PR LAGA SKTY HAIN...
//HUM FOR-OF LOOP ARRAYS MAP FUNCTION PR DIRECTLY NAHI LAGASKTY...(han array ki dESTRUCTURING krk laga skty hain...)
//HUM FOR-OF LOOP OBJECTS PR NAHI LAGA SKTY...
//HUM FOR-OF LOOP OBJECTS MAP FUNCTION PR NAHI LAGA SKTY...

====FOR-IN LOOP ======
//HUM FOR-IN LOOP ARRAYS PR LAGA SKTY HAIN(LKIN YAHAN PR HMY KEY K SATH WO VARIABLE B PASS KRNA HOTA HAI JISMAI HMRI KEY VS VALUES STORE HOTI HAIN)...
//HUM FOR-IN LOOP OBJECTS PR LAGASKTY HAIN...
//HUM FOR-IN LOOP ARRAYS MAP FUNCTION  AND OBJECTS MAP FUNCTION PR DIRECTLY NAHI LAGA SKTY HAIN...(Han ways hoty hain but will discuss further...)

====NOTES:====

ISKA MTLB BS FOR-OF LOOP OBJECTS PR NAHI LGTA BAKI SB SBPR LAG JATA HAI...

====FOR-EACH LOOP ======

//For-each loop kisi b surat m value return nahi krta..
(mtlb aghr meny koi new variable bana k osmai value store krwae hai ya function whatever tu jb b m oss value ko console krogi wo mjy result ni dyga..)

=====filter ka kam different hai or map ka different hai but ye dono kam forEach sy hoskty hain lkin osmai code lmba o jta hai or wo value b return ni krta islye hum log isko prefer nahi krty...=====

mtlb ye hai k m forEach ko essy use ni krskti:
...


======NEVER USE=========
const newnum = myNums.forEach( (num) => {     //here num is basically a variable
    if (num > 4) {
        newnu.push(num)
    }     
})
console.log(newnu);    //return from new variable


=====For-Each always use======

const newnu = []        //mtlb variable ko aleda sy oper declare or initialize krogi tb e m nichy access krskti o wesy ni krskti...
myNums.forEach( (num) => {     //here num is basically a variable
    if (num > 4) {             //or if condition logic b use krna prta forEach mai hmy
        newnu.push(num)
    }     
})
console.log(newnu);    //return from new variable



(=====File no six.js mai filter ki details)======
=======01---Filter(filter mai jin values pr hum filter lagaty hain wo wo onko skip krta hai or hmri condition k according output deta hai...)======

lkin filter m access krskty hain essy:

const myNums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
const newnums = myNums.filter( (num) =>  num > 4)
console.log(newnums);    

====ab ye filter wala kam m forEach sy b krskti thie=====

const newnu = []
myNums.forEach( (num) => {     //here num is basically a new variable jismai values jygi and then wo 1 new variable m store o k console m print o gi
    if (num > 4) {
        newnu.push(num)
    }     
})
console.log(newnu);    //return from new variable


(=====File no seven.js mai map ki details)======
=====02---Map(map basically operations hai yahan pr sb return hoga)========

const myNumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

const newNums = myNumbers.map( (num) => num + 10)
console.log(newNums);

====ab ye map wala kam m forEach sy b krskti thie=====

newNum = []

myNumbers.forEach( (num) => 
   {
    if (num >= 1) {
        newNum.push(num + 10)
    }
   })
console.log(newNum);

(=====File no eight.js mai redue ki details)======
=====03---Reduce(reduce basically shopping cart m jo values wagira add krty hain tu ye osklye use hota hai)==========================

//Reduce mai 1 hmry ps accumulator hota hai jismai hmri initial value jo hum rkhty hain wo jti hai
//and ismai 1 hmry ps current value hoti hai jismai hmra result add o k result ata hai...
//shopping cart wagwaira ki prices ko add krny klye use krty hain hum for Each wagira b use krskty hain but ye zda efficient hota hai and
//ismai inital value jo hoti hai wo hum set krk sari prices ko print krwa skty hain...

//Example:

const myNumbers = [1, 2, 3]
const Total = myNumbers.reduce( (acc, currval) => (acc + currval), 0)
console.log(Total);